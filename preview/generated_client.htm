<!DOCTYPE html>
<html lang="en">
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="utf-8">
        <meta name="generator" content="Bootply" />
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
		<title>Pomona - Generated client</title>
		<link href="content/bootstrap.min.css" rel="stylesheet" type="text/css" />
		<link href="content/prism.css" rel="stylesheet" type="text/css" />
		<link href="content/theme.css" rel="stylesheet" type="text/css" />

		<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" />
        <link rel="apple-touch-icon" href="/bootstrap/img/apple-touch-icon.png">
        <link rel="apple-touch-icon" sizes="72x72" href="/bootstrap/img/apple-touch-icon-72x72.png">
        <link rel="apple-touch-icon" sizes="114x114" href="/bootstrap/img/apple-touch-icon-114x114.png">


        <!-- CSS code from Bootply.com editor -->
        <link href="content/affix.css" rel="stylesheet" type="text/css" />
    </head>

    <!-- HTML code from Bootply.com editor -->

    <body  >

<a href="https://github.com/Pomona/Pomona"><img style="z-index: 5000; position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/e7bbb0521b397edbd5fe43e7f760759336b5e05f/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677265656e5f3030373230302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_green_007200.png"></a>

        <nav class="navbar navbar-default navbar-fixed-top" role="banner">
		  <div class="container">
		    <div class="navbar-header">
		      <a href="index.htm" class="navbar-brand">Pomona</a>
		    </div>
		    <nav class="collapse navbar-collapse" role="navigation">
		      <ul class="nav navbar-nav pull-right">
		        <li>
<a href="https://gitter.im/Pomona/Pomona?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge"><img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/Pomona/Pomona" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"></a>
		        </li>
		      	<li><a href="rest/index.htm" title="Using exposed service">Previous</a></li>
		      	<li><a href="json_patch_format.htm" title="JSON PATCH Specification">Next</a></li>
		      </ul>
      <div class="navbar-form navbar-left" role="search">
        <div class="form-group">
          <input id="search" type="search" class="form-control" placeholder="Search">
        </div>
      </div>

		    </nav>

		  </div>
		</nav>

		  <div class="container">
		  	<nav class="navbar-inverse">
		  		<ol class="breadcrumb"><li><a href="index.htm">Index</a></li><li class="active">Generated client</li></ol>
		  	</nav>
		  </div>

		<!--main-->
		<div class="container">
			<div class="row">
		      <!--left-->

		      <div class="col-md-3" id="leftCol">
		      	<h3>Pomona </h3>
		      	<br />

				<ul class="nav nav-stacked affix" id="sidebar">

		        </ul>
		        	<h3 class="no-margin">Next</h3><p><a href="json_patch_format.htm">JSON PATCH Specification</a></p>
		        	<h3 class="no-margin">Previous</h3><a href="rest/index.htm">Using exposed service</a></p>

		        </ul>
		      </div><!--/left-->

		      <!--right-->
		      <div class="col-md-9">
			      	<h1>Generated client <a href="https://github.com/Pomona/Pomona/blob/develop/documentation/generated_client.md"  class="text-muted small pull-right fa fa-github" style="margin-top: 10px"> Edit on GitHub</a></h1>

			      	<hr />

			      	<div id="main-pane">
			      		<!--Title:Generated client-->
<!--Url:generated_client-->
<p>Pomona can generate a .NET compatible client for our service if desired.</p>
<p>A client NuGet package can be generated and downloaded by accessing the
<code>/client.nupkg</code> url on the service.</p>
<p>Alternatively the DLL can be downloaded directly from <code>/{ClientAssembly}.dll</code>,
where <code>{ClientAssembly}</code> must be replaced with the configured name of the
client dll (see below for this).</p>
<h2>Controlling client generation</h2>
<h3>Metadata</h3>
<p>By overriding the <code>ClientMetadata</code> property of a <code>ITypeMappingFilter</code>,
we can change the assembly name, interface name, type name and namespace
of the client.</p>
<pre><code class="language-csharp">
        public override ClientMetadata ClientMetadata =&gt;
            base.ClientMetadata.With(
                assemblyName : &quot;Critters.Client&quot;,
                name : &quot;CritterClient&quot;,
                interfaceName : &quot;ICritterClient&quot;,
                @namespace : &quot;Critters.Client&quot;);
</code></pre>
<h3>Merged assembly</h3>
<p>By returning <code>true</code> from the <code>GenerateIndependentClient()</code> method of
<code>ITypeMappingFilter</code> we can generate an assembly with <code>Pomona.Common.dll</code>
merged.</p>
<p>Note that the resulting assembly will still have a dependency on
<code>Newtonsoft.Json</code>.</p>
<h2>LINQ support</h2>
<p>As the <code>IQueryable</code> interface by nature is a leaky abstraction, supporting
all queries is not practical.</p>
<p>Common use cases should however be supported, although sometimes with a
bit of <code>Expression</code> acrobatics.</p>
<h3>Simple queries</h3>
<p>Simple non-aggregate queries must be structured in a way described in
the example below:</p>
<p class="bg-warning" style="padding:10px"><b>Missing code sample &#39;client-linq-simple-query-structure&#39;</b><small> -- Wait for ST to catch up reading samples or CTRL+SHIFT+R to force refresh</small></p>
<h3>Group by queries</h3>
<p>Aggregate queries must be structured in a way described in
the example below:</p>
<p class="bg-warning" style="padding:10px"><b>Missing code sample &#39;client-linq-aggregate-query-structure&#39;</b><small> -- Wait for ST to catch up reading samples or CTRL+SHIFT+R to force refresh</small></p>
<h3>Supported expressions</h3>
<p>A few of the supported methods are listed here</p>
<ul>
<li>Operators: + - / * &amp;&amp; ||</li>
<li>String
<ul>
<li>.Length</li>
<li>.StartsWith(string value)</li>
<li>.Contains(string value)</li>
<li>.ToLower()</li>
<li>.ToUpper()</li>
</ul>
</li>
<li>IEnumerable&lt;T&gt;
<ul>
<li>.Where(Func&lt;,&gt; predicate)</li>
<li>.Select(Func&lt;,&gt; selector)</li>
<li>.Sum()</li>
<li>.Count()</li>
</ul>
</li>
</ul>
<p>A more complete list can be found in <code>QueryFunctionMapping.cs</code> of the Pomona
source code.</p>
<h2>Extended resources and attributes</h2>
<p>In some cases it is useful for resources to contain a <code>Dictionary&lt;string,object&gt;</code>
to store dynamic data, which keys might only be known by the client side.</p>
<p>Unfortunately a .NET dictionary is not very convenient to work with in queries,
and also leads to a lot of clumsy mapping code.</p>
<p>To simplify this Pomona makes it possible to automatically map statically typed
properties to a resource dictionary by declaring the dictionary property as an
attribute container.</p>
<pre><code class="language-csharp">
            map.Include(x =&gt; x.Map, o =&gt; o.AsAttributes());
</code></pre>
<p>Now we can inherit the client generated interface, and any added properties
with primitive values will automatically project to <code>Map</code>.</p>
<pre><code class="language-csharp">
        public interface IExtendedResource : IDictionaryContainer
        {
            string CustomString { get; set; }
            string OtherCustom { get; set; }
        }
</code></pre>
<p>After this we can query the resource using the <code>IExtendedResource</code> interface,
which will automatically redirect <code>CustomString</code> to <code>Map[&quot;CustomString&quot;]</code>,
and <code>OtherCustom</code> to <code>Map[&quot;OtherCustom&quot;]</code>.</p>
<p>For more details about this feature looking at the <code>ExtendedResourceClientTests.cs</code>
file is recommended.</p>


			      	</div>

			      	<hr />

			      	<nav>
				        <span>
				        	<strong>Previous: </strong><a href="rest/index.htm">Using exposed service</a>

				        </span>
				        <span class="pull-right">

				        	<strong>Next: </strong><a href="json_patch_format.htm">JSON PATCH Specification</a>

				        </span>
			      	</nav>

		      </div><!--/right-->
		  	</div><!--/row-->
		</div><!--/container-->


    </body>


    <foot>
        <script type='text/javascript' src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
        <script type='text/javascript' src="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

        <script type="text/javascript" src="content/embed.js"></script>
        <script type="text/javascript" src="content/prism.js"></script>
        <script type="text/javascript" src="content/sidebar.js"></script>
        <script type="text/javascript" src="content/affix.js"></script>

<script>
$('#search').keyup(function(e){
  if(e.keyCode == 13) {
    var search = $('#search').val();

    var url = 'https://www.google.com/#q=site:pomona.io ' + search;
    url = encodeURI(url);

    //alert(url);

    window.location.href = url;

    e.stopPropagation();
    if (e.cancelBubble!=null) e.cancelBubble = true;
    return false;
  }



});

</script>
    </foot>
</html>
