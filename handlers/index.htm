<!DOCTYPE html>
<html lang="en">
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="utf-8">
        <meta name="generator" content="Bootply" />
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
		<title>Pomona - Resource handlers</title>
		<link href="../content/bootstrap.min.css" rel="stylesheet" type="text/css" />
		<link href="../content/prism.css" rel="stylesheet" type="text/css" />
		<link href="../content/theme.css" rel="stylesheet" type="text/css" />

		<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" />
        <link rel="apple-touch-icon" href="/bootstrap/img/apple-touch-icon.png">
        <link rel="apple-touch-icon" sizes="72x72" href="/bootstrap/img/apple-touch-icon-72x72.png">
        <link rel="apple-touch-icon" sizes="114x114" href="/bootstrap/img/apple-touch-icon-114x114.png">


        <!-- CSS code from Bootply.com editor -->
        <link href="../content/affix.css" rel="stylesheet" type="text/css" />
    </head>

    <!-- HTML code from Bootply.com editor -->

    <body  >

<a href="https://github.com/Pomona/Pomona"><img style="z-index: 5000; position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/e7bbb0521b397edbd5fe43e7f760759336b5e05f/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677265656e5f3030373230302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_green_007200.png"></a>

        <nav class="navbar navbar-default navbar-fixed-top" role="banner">
		  <div class="container">
		    <div class="navbar-header">
		      <a href="../index.htm" class="navbar-brand">Pomona</a>
		    </div>
		    <nav class="collapse navbar-collapse" role="navigation">
		      <ul class="nav navbar-nav pull-right">
            <li>
              <a href="https://ci.appveyor.com/project/Pomona/pomona/branch/master"><img src="https://camo.githubusercontent.com/292475f55ea801049dca2b513810703735ccebce/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f766a33637734396e34393975363034362f6272616e63682f6d61737465723f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/vj3cw49n499u6046/branch/master?svg=true" style="max-width:100%;"></a>
            </li>
            <li>
              <a href="https://travis-ci.org/Pomona/Pomona"><img src="https://camo.githubusercontent.com/b95255081c0290893d299b926d4bd29dca156ffd/68747470733a2f2f7472617669732d63692e6f72672f506f6d6f6e612f506f6d6f6e612e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Pomona/Pomona.svg?branch=master" style="max-width:100%;"></a>
            </li>
		        <li>
<a href="https://gitter.im/Pomona/Pomona?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge"><img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/Pomona/Pomona" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"></a>
		        </li>
		      	<li><a href="../configuration/index.htm" title="Configuration and bootstrapping">Previous</a></li>
		      	<li><a href="../handlers/datasource.htm" title="Data source">Next</a></li>
		      </ul>
      <div class="navbar-form navbar-left" role="search">
        <div class="form-group">
          <input id="search" type="search" class="form-control" placeholder="Search">
        </div>
      </div>

		    </nav>

		  </div>
		</nav>

		  <div class="container">
		  	<nav class="navbar">
		  		<ol class="breadcrumb"><li><a href="../index.htm">Pomona</a></li><li class="active">Resource handlers</li></ol>
		  	</nav>
		  </div>

		<!--main-->
		<div class="container">
			<div class="row">
		      <!--left-->

		      <div class="col-md-3" id="leftCol">


				<ul class="nav nav-stacked affix" id="sidebar">
<li>	<h3><img src="/content/images/pomona-icon-210.png" width="210" height="210" alt="Pomona " /></h3></li>
		        	<li><h3 class="no-margin">Next</h3><p><a href="../handlers/datasource.htm">Data source</a></p></li>
		        	<li><h3 class="no-margin">Previous</h3><a href="../configuration/index.htm">Configuration and bootstrapping</a></p></li>

		        </ul>
		      </div><!--/left-->

		      <!--right-->
		      <div class="col-md-9">
			      	<h1>Resource handlers <a href="https://github.com/Pomona/Pomona/blob/develop/documentation/handlers/index.md"  class="text-muted small pull-right fa fa-github" style="margin-top: 10px"> Edit on GitHub</a></h1>

			      	<hr />

			      	<div id="main-pane">
			      		<!--Title:Resource handlers-->
<!--Url:handlers-->
<h1>What's a handler?</h1>
<p>In Pomona a handler class is where an application defines how a HTTP request
will be handled. This is what would be called a &quot;controller&quot; in many other web frameworks.</p>
<p>We'll typically define one handler class per resource type. This can be done by either
using the <code>HandledBy&lt;T&gt;(..)</code> method of the fluent configuration API, or by overriding
the <code>GetResourceHandlers</code> convention.</p>
<p>Methods in the handler class are duck-typed, and resolved using their name
and signature.</p>
<p>A handler is instantiated using the IoC container associated with the processed
<code>NancyContext</code>.</p>
<p>When desired, multiple handler classes for can be defined for a resource type. For example
one class per HTTP action.</p>
<h1>Types of handler methods</h1>
<h2>Query handlers</h2>
<p>The Query handlers are used for <code>GET</code> requests to resource collections. They are required
to return an <code>IQueryable&lt;T&gt;</code>.</p>
<p>They must follow the naming pattern <code>Get{Resources}</code> or <code>Query{Resources}</code>, where
<code>{Resources}</code> must be the plural name of the resource type. Or, if the handler class
is only used for one type, it can simply be called <code>Query</code>.</p>
<pre><code class="language-csharp">
    public class GameConsoleHandler
    {
        public IQueryable&lt;GameConsole&gt; Query()
        {
            return
                new[]
                {
                    new GameConsole() { Id = &quot;a2600&quot;, Name = &quot;Atari 2600&quot; },
                    new GameConsole() { Id = &quot;gameboy&quot;, Name = &quot;Game Boy&quot; },
                    new GameConsole() { Id = &quot;nes&quot;, Name = &quot;Nintendo Entertainment System&quot; },
                }.AsQueryable();
        }
    }
</code></pre>
<p>Here a <code>GET</code> request to /game-consoles would be routed to the <code>Query()</code> method of the
handler type.</p>
<h2>Get single resource by id</h2>
<p>A method named <code>Get{Resource}</code> or <code>Get</code> that takes the id as its first argument and
returns a resource of the correct type will handle <code>GET</code> requests for resources by id.</p>
<p>Note that by default this method is implemented by using the query handler,
so in many cases manually implementing this method is redundant.</p>
<pre><code class="language-csharp">
        public Customer GetCustomer(int id)
        {
            return this.customerRepo.GetById(id);
        }
</code></pre>
<h2>Post resource</h2>
<p>A method named <code>Post</code> or <code>Post{Resource}</code> taking the deserialized resource as a
parameter will be used for handling <code>POST</code> requests .</p>
<pre><code class="language-csharp">
        public Customer Post(Customer customer)
        {
            this.customerRepo.Save(customer);
            return customer;
        }
</code></pre>
<h2>Patch resource</h2>
<p>A method named <code>Patch</code> or <code>Patch{Resource}</code> receives the fully patched resource
on a <code>PATCH</code>.</p>
<pre><code class="language-csharp">
        public Customer Patch(Customer customer)
        {
            this.customerRepo.Save(customer);
            return customer;
        }
</code></pre>
<p>Pomona uses a custom JSON patch format, more details can be found in
<a href="../rest/index.htm">Using exposed service</a></p>
<h2>Delete resource</h2>
<p>A method named <code>Delete</code> or <code>Delete{Resource}</code> that either takes a resource
or id parameter will be used for <code>DELETE</code> requests.</p>
<pre><code class="language-csharp">
        public void Delete(Customer customer)
        {
            this.customerRepo.Delete(customer);
        }
</code></pre>


			      	</div>

			      	<hr />

			      	<nav>
				        <span>
				        	<strong>Previous: </strong><a href="../configuration/index.htm">Configuration and bootstrapping</a>

				        </span>
				        <span class="pull-right">

				        	<strong>Next: </strong><a href="../handlers/datasource.htm">Data source</a>

				        </span>
			      	</nav>

		      </div><!--/right-->
		  	</div><!--/row-->
		</div><!--/container-->


    </body>


    <foot>
        <script type='text/javascript' src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
        <script type='text/javascript' src="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

        <script type="text/javascript" src="../content/embed.js"></script>
        <script type="text/javascript" src="../content/prism.js"></script>
        <script type="text/javascript" src="../content/sidebar.js"></script>
        <script type="text/javascript" src="../content/affix.js"></script>

<script>
$('#search').keyup(function(e){
  if(e.keyCode == 13) {
    var search = $('#search').val();

    var url = 'https://www.google.com/#q=site:pomona.io ' + search;
    url = encodeURI(url);

    //alert(url);

    window.location.href = url;

    e.stopPropagation();
    if (e.cancelBubble!=null) e.cancelBubble = true;
    return false;
  }



});

</script>
    </foot>
</html>
